---
- name: Cleanup Images on Server
  hosts: ppetersaunderss.uk
  tasks:
    - name: Start cleanup of docker images by getting names
      community.docker.docker_host_info:
        images: yes
        containers: yes
      register: docker_objects

    - name: Remove all containers
      community.docker.docker_container:
        name: "{{ item.Id }}"
        state: absent
      loop: "{{ docker_objects.containers }}"
      loop_control:
        label: "{{ item.Id }}"

    - name: Remove all images
      community.docker.docker_image:
        name: item.RepoTags | first
        state: absent
        force_absent: yes
      loop: "{{ docker_objects.images }}"
      loop_control:
        label: "{{ item.RepoTags | first }}"

- name: Build and Send Image to Server
  hosts: all
  tasks:
    - name: "Install docker"
      ansible.builtin.apt:
        name: docker.io
        state: latest
        update_cache: true
      become: true

    - name: Build container image locally
      community.docker.docker_image:
        name: superlists
        source: build
        state: present
        build:
          path: /home/peter/testing-goat
          platform: linux/amd64
          nocache: true
        force_source: true
      delegate_to: 127.0.0.1

    - name: Export container image locally
      community.docker.docker_image:
        name: superlists
        archive_path: /tmp/superlists-img.tar
        source: local
      delegate_to: 127.0.0.1

    - name: Upload image to server
      ansible.builtin.copy:
        src: /tmp/superlists-img.tar
        dest: /tmp/superlists-img.tar

    - name: Import container image on server
      community.docker.docker_image:
        name: superlists
        load_path: /tmp/superlists-img.tar
        source: load
        state: present
      become: true

    - name: Ensure .env file exits
      ansible.builtin.template:
        src: env.j2
        dest: ~/superlists.env
        force: false # do not recreate if exists
      vars:
        host: "{{ inventory_hostname }}"
        secret_key: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters,digits') }}"

    - name: Ensure db.sqlite3 file exits outside container
      ansible.builtin.file:
        path: /home/peter/db.sqlite3
        state: touch

    - name: Run container
      community.docker.docker_container:
        name: superlists
        image: superlists
        state: started
        recreate: true
        env_file: ~/superlists.env
        mounts:
          - type: bind
            source: /home/peter/db.sqlite3
            target: /src/db.sqlite3
        ports: 80:8888

    - name: Run migrations inside container
      community.docker.docker_container_exec:
        container: superlists
        command: ./manage.py migrate
